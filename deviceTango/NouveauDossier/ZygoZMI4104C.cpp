/*----- PROTECTED REGION ID(ZygoZMI4104C.cpp) ENABLED START -----*/
static const char *RcsId = "$Id:  $";
//=============================================================================
//
// file :        ZygoZMI4104C.cpp
//
// description : C++ source for the ZygoZMI4104C class and its commands.
//               The class is derived from Device. It represents the
//               CORBA servant object which will be accessed from the
//               network. All commands which can be executed on the
//               ZygoZMI4104C are implemented in this file.
//
// project :     zygoZMI4104C
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// $HeadURL:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================


#include <ZygoZMI4104C.h>
#include <ZygoZMI4104CClass.h>
#include "eca_soleil_zmi4104c.h"
/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C.cpp

/**
 *  ZygoZMI4104C class description:
 *    Tango device for the ZMI 4104C interferometer
 */

//================================================================
//  The following table gives the correspondence
//  between command and method names.
//
//  Command name                  |  Method name
//================================================================
//  State                         |  Inherited (no method)
//  Status                        |  Inherited (no method)
//  ReadPosition                  |  read_position
//  ReadVelocity                  |  read_velocity
//  ReadOpticalPower              |  read_optical_power
//  ResetAxis                     |  reset_axis
//  InitializeZMISystem           |  initialize_zmisystem
//  EnableCyclicErrorCorrection   |  enable_cyclic_error_correction
//  DisableCyclicErrorCorrection  |  disable_cyclic_error_correction
//  StartContinuousScan           |  start_continuous_scan
//================================================================

//================================================================
//  Attributes managed are:
//================================================================
//  baseAddress                    |  Tango::DevULong	Scalar
//  interferometerType             |  Tango::DevBoolean	Scalar
//  positionPrecision              |  Tango::DevBoolean	Scalar
//  sampleSourceClock              |  Tango::DevBoolean	Scalar
//  resetSourceClock               |  Tango::DevBoolean	Scalar
//  samplingFrequency              |  Tango::DevDouble	Scalar
//  biasMode                       |  Tango::DevUShort	Scalar
//  cecState                       |  Tango::DevBoolean	Scalar
//  continuousScanIntegrationTime  |  Tango::DevDouble	Scalar
//  continuousScanFrequency        |  Tango::DevDouble	Scalar
//  continuousScanSize             |  Tango::DevUShort	Scalar
//  axisPositions                  |  Tango::DevDouble	Spectrum  ( max = 4)
//  axisOpticalPowers              |  Tango::DevDouble	Spectrum  ( max = 4)
//  axisVelocities                 |  Tango::DevDouble	Spectrum  ( max = 4)
//  axisPositionOffsets            |  Tango::DevDouble	Spectrum  ( max = 4)
//  axisPositionPresets            |  Tango::DevDouble	Spectrum  ( max = 4)
//  ledsStatus                     |  Tango::DevBoolean	Spectrum  ( max = 5)
//  continuousScanAxisTab          |  Tango::DevUShort	Spectrum  ( max = 4)
//================================================================

namespace ZygoZMI4104C_ns
{
/*----- PROTECTED REGION ID(ZygoZMI4104C::namespace_starting) ENABLED START -----*/

//	static initializations

/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::namespace_starting

//--------------------------------------------------------
/**
 *	Method      : ZygoZMI4104C::ZygoZMI4104C()
 *	Description : Constructors for a Tango device
 *                implementing the classZygoZMI4104C
 */
//--------------------------------------------------------
ZygoZMI4104C::ZygoZMI4104C(Tango::DeviceClass *cl, string &s)
 : Tango::Device_4Impl(cl, s.c_str())
{
	/*----- PROTECTED REGION ID(ZygoZMI4104C::constructor_1) ENABLED START -----*/
	init_device();
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::constructor_1
}
//--------------------------------------------------------
ZygoZMI4104C::ZygoZMI4104C(Tango::DeviceClass *cl, const char *s)
 : Tango::Device_4Impl(cl, s)
{
	/*----- PROTECTED REGION ID(ZygoZMI4104C::constructor_2) ENABLED START -----*/
	init_device();
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::constructor_2
}
//--------------------------------------------------------
ZygoZMI4104C::ZygoZMI4104C(Tango::DeviceClass *cl, const char *s, const char *d)
 : Tango::Device_4Impl(cl, s, d)
{
	/*----- PROTECTED REGION ID(ZygoZMI4104C::constructor_3) ENABLED START -----*/
	init_device();
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::constructor_3
}

void ZygoZMI4104C::vmeSystemReset() {
	INFO("VME SYSTEM RESET!!!\n");
	if (initSISboards() != RET_SUCCESS) FATAL("Failed to initialize SIS boards\n");
	//Sleep(10);
	if (initZMIboards() != RET_SUCCESS) FATAL("Failed to initialize ZMI board\n");
	//ui->pushButton_11->setEnabled(false);
	if (initAxis(bias_mode) != RET_SUCCESS) FATAL("Failed to initialize axis\n");
	EnableDoublePassInterferometer();

}
//--------------------------------------------------------
/**
 *	Method      : ZygoZMI4104C::delete_device()
 *	Description : will be called at device destruction or at init command
 */
//--------------------------------------------------------
void ZygoZMI4104C::delete_device()
{
	DEBUG_STREAM << "ZygoZMI4104C::delete_device() " << device_name << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::delete_device) ENABLED START -----*/
	
	//	Delete device allocated objects
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::delete_device
	delete[] attr_baseAddress_read;
	delete[] attr_interferometerType_read;
	delete[] attr_positionPrecision_read;
	delete[] attr_sampleSourceClock_read;
	delete[] attr_resetSourceClock_read;
	delete[] attr_samplingFrequency_read;
	delete[] attr_biasMode_read;
	delete[] attr_cecState_read;
	delete[] attr_continuousScanIntegrationTime_read;
	delete[] attr_continuousScanFrequency_read;
	delete[] attr_continuousScanSize_read;
	delete[] attr_axisPositions_read;
	delete[] attr_axisOpticalPowers_read;
	delete[] attr_axisVelocities_read;
	delete[] attr_axisPositionOffsets_read;
	delete[] attr_axisPositionPresets_read;
	delete[] attr_ledsStatus_read;
	delete[] attr_continuousScanAxisTab_read;
}

//--------------------------------------------------------
/**
 *	Method      : ZygoZMI4104C::init_device()
 *	Description : will be called at device initialization.
 */
//--------------------------------------------------------
void ZygoZMI4104C::init_device()
{
	DEBUG_STREAM << "ZygoZMI4104C::init_device() create device " << device_name << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::init_device_before) ENABLED START -----*/
	
	//	Initialization before get_device_property() call
	  //---------------------------------------------------------
	// Initialise variables to default values
	//---------------------------------------------------------
	m_is_device_initialized = false;
	m_status_message.str("");

	//---------------------------------------------------------
	//- instantiate the log_adapter & inner_appender in order to manage logs
	//---------------------------------------------------------
	try
	{
		INFO_STREAM << "Initialise Logging management objects" << endl;
		yat4tango::Logging::initialize(this);

		INFO_STREAM << "Create the DeviceInfo in order to manage info on versions." << endl;
		yat4tango::DeviceInfo::initialize(this, YAT_XSTR(PROJECT_NAME), YAT_XSTR(PROJECT_VERSION));
	}
	catch (Tango::DevFailed& df)
	{
		ERROR_STREAM << df << endl;
		m_status_message << "Initialization Failed.\n" << endl;
		m_status_message << "Origin\t: " << df.errors[0].origin << endl;
		m_status_message << "Desc\t: " << df.errors[0].desc << endl;
		return;
	}

	//	Get the device properties from database
	try
	{
		get_device_property();
	}
	catch (Tango::DevFailed& df)
	{
		ERROR_STREAM << df << std::endl;
		m_status_message << "Initialization Failed.\n" << endl;
		m_status_message << "Origin\t: " << df.errors[0].origin << endl;
		m_status_message << "Desc\t: " << df.errors[0].desc << endl;
		return;
	}
	catch (...)
	{
		ERROR_STREAM << "Initialization failed - unknown <get_device_property> error" << std::endl;
		m_status_message << "Initialization failed [unknown <get_device_property> error]";
		return;
	}

	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::init_device_before

	attr_baseAddress_read = new Tango::DevULong[1];
	attr_interferometerType_read = new Tango::DevBoolean[1];
	attr_positionPrecision_read = new Tango::DevBoolean[1];
	attr_sampleSourceClock_read = new Tango::DevBoolean[1];
	attr_resetSourceClock_read = new Tango::DevBoolean[1];
	attr_samplingFrequency_read = new Tango::DevDouble[1];
	attr_biasMode_read = new Tango::DevUShort[1];
	attr_cecState_read = new Tango::DevBoolean[1];
	attr_continuousScanIntegrationTime_read = new Tango::DevDouble[1];
	attr_continuousScanFrequency_read = new Tango::DevDouble[1];
	attr_continuousScanSize_read = new Tango::DevUShort[1];
	attr_axisPositions_read = new Tango::DevDouble[4];
	attr_axisOpticalPowers_read = new Tango::DevDouble[4];
	attr_axisVelocities_read = new Tango::DevDouble[4];
	attr_axisPositionOffsets_read = new Tango::DevDouble[4];
	attr_axisPositionPresets_read = new Tango::DevDouble[4];
	attr_ledsStatus_read = new Tango::DevBoolean[5];
	attr_continuousScanAxisTab_read = new Tango::DevUShort[4];

	/*----- PROTECTED REGION ID(ZygoZMI4104C::init_device) ENABLED START -----*/
	
	//	Initialize device
#if 1
	try {
		vmeSystemReset();
		}
	catch (...) {
		ERROR_STREAM << "Initialization failed - in vmeSystemReset() function" << std::endl;
		return;

	}
	
#else
	try {
		if (initSISboards() != RET_SUCCESS) {
		FATAL("Failed to initialize SIS boards\n");	}
	}
	catch (...) {
		ERROR_STREAM << "Initialization failed - in vmeSystemReset() function" << std::endl;
		return;

	}
#endif
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::init_device
}

//--------------------------------------------------------
/**
 *	Method      : ZygoZMI4104C::get_device_property()
 *	Description : Read database to initialize property data members.
 */
//--------------------------------------------------------
void ZygoZMI4104C::get_device_property()
{
	/*----- PROTECTED REGION ID(ZygoZMI4104C::get_device_property_before) ENABLED START -----*/
	
	//	Initialize property data members
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::get_device_property_before


	//	Read device properties from database.
	Tango::DbData	dev_prop;
	dev_prop.push_back(Tango::DbDatum("ZygoBoardVersion"));
	dev_prop.push_back(Tango::DbDatum("ZygoBoardSerialNumber"));
	dev_prop.push_back(Tango::DbDatum("ZygoFirmwareVersion"));
	dev_prop.push_back(Tango::DbDatum("ZygoBoardType"));
	dev_prop.push_back(Tango::DbDatum("PciVmeGatewayFirmwareVersion"));
	dev_prop.push_back(Tango::DbDatum("PciVmeGatewayBoardVersion"));

	//	is there at least one property to be read ?
	if (dev_prop.size()>0)
	{
		//	Call database and extract values
		if (Tango::Util::instance()->_UseDb==true)
			get_db_device()->get_property(dev_prop);
	
		//	get instance on ZygoZMI4104CClass to get class property
		Tango::DbDatum	def_prop, cl_prop;
		ZygoZMI4104CClass	*ds_class =
			(static_cast<ZygoZMI4104CClass *>(get_device_class()));
		int	i = -1;

		//	Try to initialize ZygoBoardVersion from class property
		cl_prop = ds_class->get_class_property(dev_prop[++i].name);
		if (cl_prop.is_empty()==false)	cl_prop  >>  zygoBoardVersion;
		else {
			//	Try to initialize ZygoBoardVersion from default device value
			def_prop = ds_class->get_default_device_property(dev_prop[i].name);
			if (def_prop.is_empty()==false)	def_prop  >>  zygoBoardVersion;
		}
		//	And try to extract ZygoBoardVersion value from database
		if (dev_prop[i].is_empty()==false)	dev_prop[i]  >>  zygoBoardVersion;

		//	Try to initialize ZygoBoardSerialNumber from class property
		cl_prop = ds_class->get_class_property(dev_prop[++i].name);
		if (cl_prop.is_empty()==false)	cl_prop  >>  zygoBoardSerialNumber;
		else {
			//	Try to initialize ZygoBoardSerialNumber from default device value
			def_prop = ds_class->get_default_device_property(dev_prop[i].name);
			if (def_prop.is_empty()==false)	def_prop  >>  zygoBoardSerialNumber;
		}
		//	And try to extract ZygoBoardSerialNumber value from database
		if (dev_prop[i].is_empty()==false)	dev_prop[i]  >>  zygoBoardSerialNumber;

		//	Try to initialize ZygoFirmwareVersion from class property
		cl_prop = ds_class->get_class_property(dev_prop[++i].name);
		if (cl_prop.is_empty()==false)	cl_prop  >>  zygoFirmwareVersion;
		else {
			//	Try to initialize ZygoFirmwareVersion from default device value
			def_prop = ds_class->get_default_device_property(dev_prop[i].name);
			if (def_prop.is_empty()==false)	def_prop  >>  zygoFirmwareVersion;
		}
		//	And try to extract ZygoFirmwareVersion value from database
		if (dev_prop[i].is_empty()==false)	dev_prop[i]  >>  zygoFirmwareVersion;

		//	Try to initialize ZygoBoardType from class property
		cl_prop = ds_class->get_class_property(dev_prop[++i].name);
		if (cl_prop.is_empty()==false)	cl_prop  >>  zygoBoardType;
		else {
			//	Try to initialize ZygoBoardType from default device value
			def_prop = ds_class->get_default_device_property(dev_prop[i].name);
			if (def_prop.is_empty()==false)	def_prop  >>  zygoBoardType;
		}
		//	And try to extract ZygoBoardType value from database
		if (dev_prop[i].is_empty()==false)	dev_prop[i]  >>  zygoBoardType;

		//	Try to initialize PciVmeGatewayFirmwareVersion from class property
		cl_prop = ds_class->get_class_property(dev_prop[++i].name);
		if (cl_prop.is_empty()==false)	cl_prop  >>  pciVmeGatewayFirmwareVersion;
		else {
			//	Try to initialize PciVmeGatewayFirmwareVersion from default device value
			def_prop = ds_class->get_default_device_property(dev_prop[i].name);
			if (def_prop.is_empty()==false)	def_prop  >>  pciVmeGatewayFirmwareVersion;
		}
		//	And try to extract PciVmeGatewayFirmwareVersion value from database
		if (dev_prop[i].is_empty()==false)	dev_prop[i]  >>  pciVmeGatewayFirmwareVersion;

		//	Try to initialize PciVmeGatewayBoardVersion from class property
		cl_prop = ds_class->get_class_property(dev_prop[++i].name);
		if (cl_prop.is_empty()==false)	cl_prop  >>  pciVmeGatewayBoardVersion;
		else {
			//	Try to initialize PciVmeGatewayBoardVersion from default device value
			def_prop = ds_class->get_default_device_property(dev_prop[i].name);
			if (def_prop.is_empty()==false)	def_prop  >>  pciVmeGatewayBoardVersion;
		}
		//	And try to extract PciVmeGatewayBoardVersion value from database
		if (dev_prop[i].is_empty()==false)	dev_prop[i]  >>  pciVmeGatewayBoardVersion;

	}

	/*----- PROTECTED REGION ID(ZygoZMI4104C::get_device_property_after) ENABLED START -----*/
	
	//	Check device property data members init
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::get_device_property_after
}

//--------------------------------------------------------
/**
 *	Method      : ZygoZMI4104C::always_executed_hook()
 *	Description : method always executed before any command is executed
 */
//--------------------------------------------------------
void ZygoZMI4104C::always_executed_hook()
{
	INFO_STREAM << "ZygoZMI4104C::always_executed_hook()  " << device_name << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::always_executed_hook) ENABLED START -----*/
	
	//	code always executed before all requests
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::always_executed_hook
}

//--------------------------------------------------------
/**
 *	Method      : ZygoZMI4104C::read_attr_hardware()
 *	Description : Hardware acquisition for attributes
 */
//--------------------------------------------------------
void ZygoZMI4104C::read_attr_hardware(TANGO_UNUSED(vector<long> &attr_list))
{
	DEBUG_STREAM << "ZygoZMI4104C::read_attr_hardware(vector<long> &attr_list) entering... " << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::read_attr_hardware) ENABLED START -----*/
	
	//	Add your own code
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::read_attr_hardware
}

//--------------------------------------------------------
/**
 *	Read attribute baseAddress related method
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void ZygoZMI4104C::read_baseAddress(Tango::Attribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::read_baseAddress(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::read_baseAddress) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_baseAddress_read);
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::read_baseAddress
}
//--------------------------------------------------------
/**
 *	Write attribute baseAddress related method
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void ZygoZMI4104C::write_baseAddress(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::write_baseAddress(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevULong	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(ZygoZMI4104C::write_baseAddress) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::write_baseAddress
}
//--------------------------------------------------------
/**
 *	Read attribute interferometerType related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void ZygoZMI4104C::read_interferometerType(Tango::Attribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::read_interferometerType(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::read_interferometerType) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_interferometerType_read);
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::read_interferometerType
}
//--------------------------------------------------------
/**
 *	Write attribute interferometerType related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void ZygoZMI4104C::write_interferometerType(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::write_interferometerType(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(ZygoZMI4104C::write_interferometerType) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::write_interferometerType
}
//--------------------------------------------------------
/**
 *	Read attribute positionPrecision related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void ZygoZMI4104C::read_positionPrecision(Tango::Attribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::read_positionPrecision(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::read_positionPrecision) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_positionPrecision_read);
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::read_positionPrecision
}
//--------------------------------------------------------
/**
 *	Write attribute positionPrecision related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void ZygoZMI4104C::write_positionPrecision(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::write_positionPrecision(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(ZygoZMI4104C::write_positionPrecision) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::write_positionPrecision
}
//--------------------------------------------------------
/**
 *	Read attribute sampleSourceClock related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void ZygoZMI4104C::read_sampleSourceClock(Tango::Attribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::read_sampleSourceClock(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::read_sampleSourceClock) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_sampleSourceClock_read);
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::read_sampleSourceClock
}
//--------------------------------------------------------
/**
 *	Write attribute sampleSourceClock related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void ZygoZMI4104C::write_sampleSourceClock(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::write_sampleSourceClock(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(ZygoZMI4104C::write_sampleSourceClock) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::write_sampleSourceClock
}
//--------------------------------------------------------
/**
 *	Read attribute resetSourceClock related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void ZygoZMI4104C::read_resetSourceClock(Tango::Attribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::read_resetSourceClock(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::read_resetSourceClock) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_resetSourceClock_read);
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::read_resetSourceClock
}
//--------------------------------------------------------
/**
 *	Write attribute resetSourceClock related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void ZygoZMI4104C::write_resetSourceClock(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::write_resetSourceClock(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(ZygoZMI4104C::write_resetSourceClock) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::write_resetSourceClock
}
//--------------------------------------------------------
/**
 *	Read attribute samplingFrequency related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void ZygoZMI4104C::read_samplingFrequency(Tango::Attribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::read_samplingFrequency(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::read_samplingFrequency) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_samplingFrequency_read);
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::read_samplingFrequency
}
//--------------------------------------------------------
/**
 *	Write attribute samplingFrequency related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void ZygoZMI4104C::write_samplingFrequency(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::write_samplingFrequency(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(ZygoZMI4104C::write_samplingFrequency) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::write_samplingFrequency
}
//--------------------------------------------------------
/**
 *	Read attribute biasMode related method
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void ZygoZMI4104C::read_biasMode(Tango::Attribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::read_biasMode(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::read_biasMode) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_biasMode_read);
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::read_biasMode
}
//--------------------------------------------------------
/**
 *	Write attribute biasMode related method
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void ZygoZMI4104C::write_biasMode(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::write_biasMode(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevUShort	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(ZygoZMI4104C::write_biasMode) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::write_biasMode
}
//--------------------------------------------------------
/**
 *	Read attribute cecState related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void ZygoZMI4104C::read_cecState(Tango::Attribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::read_cecState(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::read_cecState) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_cecState_read);
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::read_cecState
}
//--------------------------------------------------------
/**
 *	Write attribute cecState related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void ZygoZMI4104C::write_cecState(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::write_cecState(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(ZygoZMI4104C::write_cecState) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::write_cecState
}
//--------------------------------------------------------
/**
 *	Read attribute continuousScanIntegrationTime related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void ZygoZMI4104C::read_continuousScanIntegrationTime(Tango::Attribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::read_continuousScanIntegrationTime(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::read_continuousScanIntegrationTime) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_continuousScanIntegrationTime_read);
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::read_continuousScanIntegrationTime
}
//--------------------------------------------------------
/**
 *	Write attribute continuousScanIntegrationTime related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void ZygoZMI4104C::write_continuousScanIntegrationTime(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::write_continuousScanIntegrationTime(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(ZygoZMI4104C::write_continuousScanIntegrationTime) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::write_continuousScanIntegrationTime
}
//--------------------------------------------------------
/**
 *	Read attribute continuousScanFrequency related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void ZygoZMI4104C::read_continuousScanFrequency(Tango::Attribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::read_continuousScanFrequency(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::read_continuousScanFrequency) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_continuousScanFrequency_read);
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::read_continuousScanFrequency
}
//--------------------------------------------------------
/**
 *	Write attribute continuousScanFrequency related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void ZygoZMI4104C::write_continuousScanFrequency(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::write_continuousScanFrequency(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(ZygoZMI4104C::write_continuousScanFrequency) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::write_continuousScanFrequency
}
//--------------------------------------------------------
/**
 *	Read attribute continuousScanSize related method
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void ZygoZMI4104C::read_continuousScanSize(Tango::Attribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::read_continuousScanSize(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::read_continuousScanSize) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_continuousScanSize_read);
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::read_continuousScanSize
}
//--------------------------------------------------------
/**
 *	Write attribute continuousScanSize related method
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void ZygoZMI4104C::write_continuousScanSize(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::write_continuousScanSize(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevUShort	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(ZygoZMI4104C::write_continuousScanSize) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::write_continuousScanSize
}
//--------------------------------------------------------
/**
 *	Read attribute axisPositions related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Spectrum max = 4
 */
//--------------------------------------------------------
void ZygoZMI4104C::read_axisPositions(Tango::Attribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::read_axisPositions(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::read_axisPositions) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_axisPositions_read, 4);
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::read_axisPositions
}
//--------------------------------------------------------
/**
 *	Read attribute axisOpticalPowers related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Spectrum max = 4
 */
//--------------------------------------------------------
void ZygoZMI4104C::read_axisOpticalPowers(Tango::Attribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::read_axisOpticalPowers(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::read_axisOpticalPowers) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_axisOpticalPowers_read, 4);
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::read_axisOpticalPowers
}
//--------------------------------------------------------
/**
 *	Read attribute axisVelocities related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Spectrum max = 4
 */
//--------------------------------------------------------
void ZygoZMI4104C::read_axisVelocities(Tango::Attribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::read_axisVelocities(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::read_axisVelocities) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_axisVelocities_read, 4);
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::read_axisVelocities
}
//--------------------------------------------------------
/**
 *	Read attribute axisPositionOffsets related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Spectrum max = 4
 */
//--------------------------------------------------------
void ZygoZMI4104C::read_axisPositionOffsets(Tango::Attribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::read_axisPositionOffsets(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::read_axisPositionOffsets) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_axisPositionOffsets_read, 4);
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::read_axisPositionOffsets
}
//--------------------------------------------------------
/**
 *	Write attribute axisPositionOffsets related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Spectrum max = 4
 */
//--------------------------------------------------------
void ZygoZMI4104C::write_axisPositionOffsets(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::write_axisPositionOffsets(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve number of write values
	int	w_length = attr.get_write_value_length();

	//	Retrieve pointer on write values (Do not delete !)
	const Tango::DevDouble	*w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(ZygoZMI4104C::write_axisPositionOffsets) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::write_axisPositionOffsets
}
//--------------------------------------------------------
/**
 *	Read attribute axisPositionPresets related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Spectrum max = 4
 */
//--------------------------------------------------------
void ZygoZMI4104C::read_axisPositionPresets(Tango::Attribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::read_axisPositionPresets(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::read_axisPositionPresets) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_axisPositionPresets_read, 4);
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::read_axisPositionPresets
}
//--------------------------------------------------------
/**
 *	Write attribute axisPositionPresets related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Spectrum max = 4
 */
//--------------------------------------------------------
void ZygoZMI4104C::write_axisPositionPresets(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::write_axisPositionPresets(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve number of write values
	int	w_length = attr.get_write_value_length();

	//	Retrieve pointer on write values (Do not delete !)
	const Tango::DevDouble	*w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(ZygoZMI4104C::write_axisPositionPresets) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::write_axisPositionPresets
}
//--------------------------------------------------------
/**
 *	Read attribute ledsStatus related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Spectrum max = 5
 */
//--------------------------------------------------------
void ZygoZMI4104C::read_ledsStatus(Tango::Attribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::read_ledsStatus(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::read_ledsStatus) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_ledsStatus_read, 5);
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::read_ledsStatus
}
//--------------------------------------------------------
/**
 *	Read attribute continuousScanAxisTab related method
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Spectrum max = 4
 */
//--------------------------------------------------------
void ZygoZMI4104C::read_continuousScanAxisTab(Tango::Attribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::read_continuousScanAxisTab(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::read_continuousScanAxisTab) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(attr_continuousScanAxisTab_read, 4);
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::read_continuousScanAxisTab
}
//--------------------------------------------------------
/**
 *	Write attribute continuousScanAxisTab related method
 *	Description: 
 *
 *	Data type:	Tango::DevUShort
 *	Attr type:	Spectrum max = 4
 */
//--------------------------------------------------------
void ZygoZMI4104C::write_continuousScanAxisTab(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "ZygoZMI4104C::write_continuousScanAxisTab(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve number of write values
	int	w_length = attr.get_write_value_length();

	//	Retrieve pointer on write values (Do not delete !)
	const Tango::DevUShort	*w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(ZygoZMI4104C::write_continuousScanAxisTab) ENABLED START -----*/
	
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::write_continuousScanAxisTab
}

//--------------------------------------------------------
/**
 *	Method      : ZygoZMI4104C::add_dynamic_attributes()
 *	Description : Create the dynamic attributes if any
 *                for specified device.
 */
//--------------------------------------------------------
void ZygoZMI4104C::add_dynamic_attributes()
{
	/*----- PROTECTED REGION ID(ZygoZMI4104C::add_dynamic_attributes) ENABLED START -----*/
	
	//	Add your own code to create and add dynamic attributes if any
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::add_dynamic_attributes
}

//--------------------------------------------------------
/**
 *	Command ReadPosition related method
 *	Description: read the value of position on a specific axis
 *
 *	@param argin axis to read position on
 *	@returns the position value
 */
//--------------------------------------------------------
Tango::DevDouble ZygoZMI4104C::read_position(Tango::DevUShort argin)
{
	Tango::DevDouble argout;
	DEBUG_STREAM << "ZygoZMI4104C::ReadPosition()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::read_position) ENABLED START -----*/
	
	//	Add your own code
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::read_position
	return argout;
}
//--------------------------------------------------------
/**
 *	Command ReadVelocity related method
 *	Description: read the velocity on a specific axis
 *
 *	@param argin axis to read velocity on
 *	@returns the velocity value
 */
//--------------------------------------------------------
Tango::DevDouble ZygoZMI4104C::read_velocity(Tango::DevUShort argin)
{
	Tango::DevDouble argout;
	DEBUG_STREAM << "ZygoZMI4104C::ReadVelocity()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::read_velocity) ENABLED START -----*/
	
	//	Add your own code
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::read_velocity
	return argout;
}
//--------------------------------------------------------
/**
 *	Command ReadOpticalPower related method
 *	Description: read the optical power on a specifc axis
 *
 *	@param argin axis to read optical power on
 *	@returns the optical power value
 */
//--------------------------------------------------------
Tango::DevDouble ZygoZMI4104C::read_optical_power(Tango::DevUShort argin)
{
	Tango::DevDouble argout;
	DEBUG_STREAM << "ZygoZMI4104C::ReadOpticalPower()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::read_optical_power) ENABLED START -----*/
	
	//	Add your own code
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::read_optical_power
	return argout;
}
//--------------------------------------------------------
/**
 *	Command ResetAxis related method
 *	Description: reset a specific axis
 *
 *	@param argin axis to reset
 */
//--------------------------------------------------------
void ZygoZMI4104C::reset_axis(Tango::DevUShort argin)
{
	DEBUG_STREAM << "ZygoZMI4104C::ResetAxis()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::reset_axis) ENABLED START -----*/
	
	//	Add your own code
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::reset_axis
}
//--------------------------------------------------------
/**
 *	Command InitializeZMISystem related method
 *	Description: reinitialize the overall measurement system
 *
 */
//--------------------------------------------------------
void ZygoZMI4104C::initialize_zmisystem()
{
	DEBUG_STREAM << "ZygoZMI4104C::InitializeZMISystem()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::initialize_zmisystem) ENABLED START -----*/
	
	//	Add your own code
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::initialize_zmisystem
}
//--------------------------------------------------------
/**
 *	Command EnableCyclicErrorCorrection related method
 *	Description: enable automatic cyclic error correction on all measurement axis
 *
 */
//--------------------------------------------------------
void ZygoZMI4104C::enable_cyclic_error_correction()
{
	DEBUG_STREAM << "ZygoZMI4104C::EnableCyclicErrorCorrection()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::enable_cyclic_error_correction) ENABLED START -----*/
	
	//	Add your own code
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::enable_cyclic_error_correction
}
//--------------------------------------------------------
/**
 *	Command DisableCyclicErrorCorrection related method
 *	Description: disable automatic cyclic error correction on all measurement axis
 *
 */
//--------------------------------------------------------
void ZygoZMI4104C::disable_cyclic_error_correction()
{
	DEBUG_STREAM << "ZygoZMI4104C::DisableCyclicErrorCorrection()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::disable_cyclic_error_correction) ENABLED START -----*/
	
	//	Add your own code
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::disable_cyclic_error_correction
}
//--------------------------------------------------------
/**
 *	Command StartContinuousScan related method
 *	Description: start the continuous scan on axis selected by continuousScanAxisTab or by continuousScanAxisNbr. the command also use continuousScanIntegrationTime, continuousScanFrequency attribute.
 *
 *	@param argin type of continuous scan to start
 */
//--------------------------------------------------------
void ZygoZMI4104C::start_continuous_scan(Tango::DevBoolean argin)
{
	DEBUG_STREAM << "ZygoZMI4104C::StartContinuousScan()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(ZygoZMI4104C::start_continuous_scan) ENABLED START -----*/
	
	//	Add your own code
	
	/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::start_continuous_scan
}

/*----- PROTECTED REGION ID(ZygoZMI4104C::namespace_ending) ENABLED START -----*/

//	Additional Methods

/*----- PROTECTED REGION END -----*/	//	ZygoZMI4104C::namespace_ending
} //	namespace
